#!/bin/bash
#
# Auto mount EC2 instance store
# Note:
#   1. This script is supposed to run as "root" under cloud-init
#   2. This script only supports NVMe SSD Volumes
# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html
# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/device_naming.html
# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html
#

set -e

VOLUME_LABEL="nvme-ephemeral"
MOUNT_POINT="/mnt/ephemeral"

# Return the name of first available NVMe instance storage device
# Note the order of NVMe device names are not deterministic
# https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/nvme-ebs-volumes.html
#
# TODO: create RAID 0 if multiple volumes are available
function get_device_name {
  local readonly nvme_list_json=$(nvme list -o json)
  echo "$nvme_list_json" | jq -r '.Devices[] | select(.ModelNumber=="Amazon EC2 NVMe Instance Storage") | .DevicePath' | head -1
}

function create_filesystem {
  local readonly volume_label="$1"
  local readonly device_name="$2"
  mkfs.ext4 -E nodiscard -m0 -L "$volume_label" "$device_name"
}

function mount_volume {
  local readonly volume_label="$1"
  local readonly mount_point="$2"
  mkdir -p "$mount_point"
  # Write to /etc/fstab so the volume is mounted at reboot
  # Because the order of NVMe device names are not deterministic,
  # we use the volume label instead of device name!
  echo "LABEL=$volume_label $mount_point ext4 defaults 0 0" | tee -a /etc/fstab
  mount -a
}

function run {
  local readonly volume_label="$1"
  local readonly mount_point="$2"
  local readonly device_name=$(get_device_name)
  if [[ -n "$device_name" ]]; then
    create_filesystem "$volume_label" "$device_name"
    mount_volume "$volume_label" "$mount_point"
  fi
}

run "$VOLUME_LABEL" "$MOUNT_POINT"
